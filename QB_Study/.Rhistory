--help
--help()
help.start()
x <- rnorm(50)
y <- rnorm(x)
plot(x,y)
ls()
rm(x,y)
ls()
x <- 1:20
w <= 1 + sqrt(x) / 2
w <- 1 + sqrt(x) / 2
dummy <- data.frame(x=x, y=x+rnorm(x)+w)
dummy
fm <- lm(y ~ x, data=dummy)
summary(fm)
fm1 <- lm(y~x, data=dummy, weight=1/w^2)
summary(fm1)
attach(dummy)
lrf <- lowess(x, y)
plot(x, y)
lines(x, lrf$y)
abline(0, 1, lty=3)
abline(coef(fm))
abline(coef(fm1), col = "red")
detach()
plot(fitted(fm), resid(fm),
xlab="Fitted values",
ylab="Residuals",
main="Residuals vs Fitted")
qqnorm(resid(fm), main="Residuals Rankit Plot")
rm(fm, fm1, lrf, x, dummy)
filepath <- system.file("data", "morley.tab" , package="datasets")
filepath
file.show(filepath)
mm <- read.table(filepath)
mm
mm$Expt <- factor(mm$Expt)
mm$Run <- factor(mm$Run)
attach(mm)
plot(Expt, Speed, main="Speed of Light Data", xlab="Experiment No.")
fm <- aov(Speed ~ Run + Expt, data=mm)
summary(fm)
fm0 <- update(fm, . ~ . - Run)
anova(fm0, fm)
detach()
rm(fm, fm0)
x <- seq(-pi, pi, len=50)
y <- x
f <- outer(x, y, function(x, y) cos(y)/(1 + x^2))
oldpar <- par(no.readonly = TRUE)
par(pty="s")
contour(x, y, f)
contour(x, y, f, nlevels=15, add=TRUE)
fa <- (f-t(f))/2
contour(x, y, fa, nlevels=15)
par(oldpar)
image(x, y, f)
image(x, y, fa)
objects(); rm(x, y, f, fa)
q()
help("solve")
help(c)
n <- 10
1:n-1
1:(n-1)
30:1
2 + 3
2 + 3
2 + 3
x <- c(4, 8, 15, 16, 23, 42)
x
length(x)
length(x)
mean(x)
min(x)
max(x)
sd(x)
summary(x)
plot(x)
z <- c(1, 2)
y <- c(8, 27, 34, 4, 19, 10)
y
x
y
x + y
x
z
x + z
length(z)
a <- x  + y
b <- x + c
b <- x + z
length(b)
ls()
rm(x)
rm(z)
gc()
a <- 1
a <- "hello world"
a <- 1
a <- c(a, 2)
?matrix
x <- matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
z
x
x[1,2]
x[2,1]
x[1,]
x[1]
x[,1]
x[,2]
x <- rnorm(50)
y <- x + rnorm(50, mean = 50, sd = .1)
plot(x, y)
set.seed(42)
x <- rnorm(50)
y <- x + rnorm(50, mean = 50, sd = .1)
plot(x, y)
plot(x, y, xlab="Advertising Budget", ylab="Sales", main="Simulated Sales Data")
abline(lm(y ~ x), col="red")
?abline
lm(y ~x)
?read.csv()
read.csv(college)
read.csv(file="/Users/Will/Downloads/College.csv", header=TRUE, sep=",")
College <- read.csv(file="/Users/Will/Downloads/College.csv", header=TRUE, sep=",")
College
college <- read.csv(file="/Users/Will/Downloads/College.csv", header=TRUE, sep=",")
View(College)
rm(College)
?View
view(college, "College Dataset")
View(college, "College Dataset")
rownames(college) <- college[,1]
View(college)
View(college)
college <- read.csv(file="/Users/Will/Downloads/College.csv", header=TRUE, sep=",")
View(college)
rownames(college) <- college[ ,1]
View(college)
?rownames
summary()
summary(college)
college <- read.csv(file="/Users/Will/Downloads/College.csv", header=TRUE, sep=",")
View(college)
rownames(college) <- college[ ,1]
View(college)
summary(college)
?pairs
pairs(college[,1:10])
?plot
?boxplot
boxplot(college[,10], college[,1])
boxplotNames <- c("Outstate", "Private")
boxplot(college[,10], college[,1], names=boxplotNames)
read.csv("http://www-bcf.usc.edu/~gareth/ISL/College.csv")
college <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/College.csv")
View(college)
summary()
pairs(college[,1:10])
categories <- c("Outstate", "Private")
?plot
boxplot(college[,10], college[,1], names=categories)
?rep
?nrow
college$Elite <- rep("No", nrow(college))
college$Elite[college$Top10perc > 50] <- "Yes"
college$Elite <- as.factor(college$Elite)
summary(Elite)
summary(college$Elite)
categories[2] <- "Elite"
boxplot(college[,10], college$Elite, names=categories)
?hist
par(mfrow=c(2,2))
?par
hist(college$Enroll)
hist(college$PhD)
hist(college$Grad.Rate)
hist(college$Top10perc)
summary(college$Top10perc)
college$Top10perc = 96
s the university with the most students in the top 10% of the class?
#   Answer:
college <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/College.csv")
View(college)
summary()
pairs(college[,1:10])
categories <- c("Outstate", "Private")
boxplot(college[,10], college[,1], names=categories)
college$Elite <- rep("No", nrow(college))
college$Elite[college$Top10perc > 50] <- "Yes"
college$Elite <- as.factor(college$Elite)
summary(college$Elite)
categories[2] <- "Elite"
boxplot(college[,10], college$Elite, names=categories)
par(mfrow=c(2,2))
hist(college$Enroll)
hist(college$PhD)
hist(college$Grad.Rate)
hist(college$Top10perc)
hist(college$Top10perc)
hist(college$Top10perc)
hist(college$Top10perc)
hist(college$Top10perc)
source('~/Developer/4300 Lab/lab_session_1.R')
summary(college$Top10perc)
if(college$Top10perc = 96) college$Top10perc
> if(college$Top10perc == 96) college$Top10perc
if(college$Top10perc == 96) college$Top10perc
which.max(college$Top10perc)
source('~/Developer/4300 Lab/lab_session_1.R')
which.max(college$Top10perc)
df[which.max(college$Top10perc)]
df[which.max(college$Top10perc),]
?which.max
which.max(college$Top10perc)
college[355]
college[355,]
college[which.max(college$Top10perc), 1]
college[3,1]
# 1.) What is the university with the most students in the top 10% of the class?
college[which.max(college$Top10perc), 1]
college[which.min(college$Accept/college$Apps), 1]
# C.) What university has the most liberal acceptance rate?
college[which.max(college$Accept/college$Apps), 1]
# C.) What university has the most liberal acceptance rate?
which.max(college$Accept/college$Apps)
which((college$Accept/college$Apps) == max(college$Accept/college$Apps))
college[which((college$Accept/college$Apps) == max(college$Accept/college$Apps)), 1]
# C.) What university has the most liberal acceptance rate?
college[which((college$Accept/college$Apps) == max(college$Accept/college$Apps)), 1]
plot(college$Outstate, college$Grad.Rate)
demo
demo()
rm(list = ls())
# Import Library
library(ggplot2)
# Get dataset
setwd('/Users/Will/Developer/R/CombineStudy')
data <- read.csv("combine_data.csv")
draft <- read.csv('draft_order.csv')
# Rename variables
names(data)[names(data) == "Height..in."] <- "Height"
names(data)[names(data) == "Weight..lbs."] <- "Weight"
names(data)[names(data) == "Hand.Size..in."] <- "Hand_Size"
names(data)[names(data) == "Arm.Length..in."] <- "Arm_Length"
names(data)[names(data) == "X40.Yard"] <- "Forty_Yard"
names(data)[names(data) == "Bench.Press"] <- "Bench_Press"
names(data)[names(data) == "Vert.Leap..in."] <- "Vertical_Leap"
names(data)[names(data) == "Broad.Jump..in."] <- "Broad_Jump"
names(data)[names(data) == "Three-Cone"] <- "Three_Cone"
names(data)[names(data) == "X60Yd.Shuttle"] <- "Sixty_Shuttle"
names(data)[names(data) == "Name"] <- "Player"
# The webscraped page used the value 9.99 instead of NA
data[data==9.99] <- NA
# Remove duplicate columns before merge
draft$Position <- NULL
draft$College <- NULL
full <- merge(data, draft, by="Player")
ggplot(data=full) +
geom_point(mapping=aes(x=Height, y=Pick))
hist(height)
hist(Height)
attach(full)
hist(Height)
boxplot(Height)
full[Height<72]
full[full$Height<72]
boxplot(Forty_Yard)
full[which(full$Height<72)]
full[which(Height<72)]
full[which(Height<72)]
full[which(Height<72),]
full$Player[which(Height<72),]
full[which(Height<72),]
full[which(Height<72),]$Player
boxplot(Height)
full[which(Height<71),]$Player
View(full)
full[which(Player == "Russel Wilson"),]$Height
hist(Height)
summary(full)
boxplot(Forty_Yard)
full(which.min(Forty_Yard),)
full[which.min(Forty_Yard),]
hist(Wonderlic)
boxplot(Vertical)
boxplot(Vertical_Leap)
full[which.min(Vertical_Leap),]
plot(Weight, Vertical_Leap)
plot(Forty_Yard, Vertical_Leap)
lm.fit <- lm(Forty_Yard ~ Vertical_Leap)
plot(Forty_yard ~ Vertical_Leap)
abline(lmfit)
plot(Forty_Yard ~ Vertical_Leap)
abline(lmfit)
plot(Forty_Yard, Vertical_Leap)
abline(lm.fit)
plot(lm.fit)
plot(lm.fit)
